# ═══════════════════════════════════════════════════════
# HARDWARE STORE AI ASSISTANT - ENVIRONMENT VARIABLES
# ═══════════════════════════════════════════════════════

# ┌─────────────────────────────────────────────────────┐
# │                   SECURITY                          │
# └─────────────────────────────────────────────────────┘

# API Keys para autenticación
# IMPORTANTE: Cambiar estos valores en producción
ADMIN_API_KEYS=your_admin_api_key_1,your_admin_api_key_2
USER_API_KEYS=your_user_api_key_1,your_user_api_key_2

# Rate Limiting (requests per minute)
RATE_LIMIT_DEFAULT=60
RATE_LIMIT_USER=120
RATE_LIMIT_ADMIN=300

# ┌─────────────────────────────────────────────────────┐
# │                   DATABASE                          │
# └─────────────────────────────────────────────────────┘

# PostgreSQL Configuration
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=macroferro_db
POSTGRES_USER=your_db_user
POSTGRES_PASSWORD=your_db_password

# Database URL (alternativa a las variables individuales)
# Esta variable es usada por docker-compose, asegúrate de que coincida con las anteriores
DATABASE_URL=postgresql://your_db_user:your_db_password@postgres:5432/macroferro_db

# ┌─────────────────────────────────────────────────────┐
# │                   REDIS CACHE                       │
# └─────────────────────────────────────────────────────┘

# Redis Configuration
REDIS_HOST=redis
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0

# Redis URL (alternativa a las variables individuales)
REDIS_URL=redis://redis:6379/0

# ┌─────────────────────────────────────────────────────┐
# │                   QDRANT                            │
# └─────────────────────────────────────────────────────┘

# Qdrant Vector Database
QDRANT_HOST=qdrant
QDRANT_PORT=6333
QDRANT_API_KEY=
QDRANT_COLLECTION_NAME=products
QDRANT_PORT_GRPC=6333
QDRANT_PORT_REST=6334

# ┌─────────────────────────────────────────────────────┐
# │                   OLLAMA                            │
# └─────────────────────────────────────────────────────┘

# Ollama Configuration
OLLAMA_HOST=ollama
OLLAMA_PORT=11434
OLLAMA_MODEL=nomic-embed-text

# ┌─────────────────────────────────────────────────────┐
# │                   LOGGING                           │
# └─────────────────────────────────────────────────────┘

# Logging Configuration
LOG_LEVEL=INFO
LOG_FORMAT=json
LOG_FILE_PATH=logs/app.log
LOG_MAX_SIZE=10MB
LOG_BACKUP_COUNT=5

# ┌─────────────────────────────────────────────────────┐
# │                   APPLICATION                       │
# └─────────────────────────────────────────────────────┘

# Application Settings
APP_NAME=Macroferro
APP_VERSION=1.0.0
APP_ENVIRONMENT=development
APP_DEBUG=true

# Server Configuration
HOST=0.0.0.0
PORT=8000

# CORS Settings
CORS_ORIGINS=http://localhost:3000,http://localhost:8080
CORS_ALLOW_CREDENTIALS=true

# ┌─────────────────────────────────────────────────────┐
# │                   MONITORING                        │
# └─────────────────────────────────────────────────────┘

# Metrics and Monitoring
METRICS_ENABLED=true
HEALTH_CHECK_INTERVAL=30
PERFORMANCE_MONITORING=true

# ┌─────────────────────────────────────────────────────┐
# │                   DEVELOPMENT                       │
# └─────────────────────────────────────────────────────┘

# Development Settings (solo para desarrollo)
RELOAD=true
DEBUG_SQL=false
CACHE_TTL=3600

# ┌─────────────────────────────────────────────────────┐
# │                   PGAdmin4                          │
# └─────────────────────────────────────────────────────┘

PGADMIN_DEFAULT_EMAIL=admin@example.com
PGADMIN_DEFAULT_PASSWORD=your_pgadmin_password

# ┌─────────────────────────────────────────────────────┐
# │                   OPENAI                            │
# └─────────────────────────────────────────────────────┘
OPENAI_API_KEY=sk-your-openai-api-key-here
OPENAI_MODEL=gpt-4o-mini-2024-07-18

# ┌─────────────────────────────────────────────────────┐
# │                   N8N & WEBHOOKS                    │
# └─────────────────────────────────────────────────────┘

# N8N Configuration
N8N_PROTOCOL=http
N8N_HOST=localhost
N8N_PORT=5678
N8N_BASIC_AUTH_ACTIVE=true
N8N_BASIC_AUTH_USER=admin
N8N_BASIC_AUTH_PASSWORD=your-n8n-password

# Webhook URL - This will be updated manually with the dynamic ngrok URL
WEBHOOK_URL=http://localhost:5678/webhook

# =============================================================
# TELEGRAM BOT
# =============================================================
# Token del bot de Telegram (obtener de @BotFather)
TELEGRAM_BOT_TOKEN=your-telegram-bot-token-here

# URL del webhook de Telegram (donde Telegram enviará las actualizaciones)
# En desarrollo local con ngrok: https://your-ngrok-url.ngrok.io/api/v1/telegram/webhook
# En producción: https://your-domain.com/api/v1/telegram/webhook
TELEGRAM_WEBHOOK_URL=https://your-domain.com/api/v1/telegram/webhook

# Token secreto para validar que las requests vienen de Telegram
TELEGRAM_WEBHOOK_SECRET=your-webhook-secret-token

# =============================================================
# NGROK (para desarrollo local)
# =============================================================

# ngrok Authtoken - Keep this here for the ngrok service to work
NGROK_AUTHTOKEN=your_ngrok_authtoken_here

# ┌─────────────────────────────────────────────────────┐
# │                   SMTP                             │
# └─────────────────────────────────────────────────────┘

# SMTP Configuration
SMTP_HOST=smtp.example.com
SMTP_PORT=587
SMTP_USER=user@example.com
SMTP_PASSWORD=your_smtp_password
SENDER_EMAIL=noreply@example.com 