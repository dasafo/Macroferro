services:
  postgres:
    image: postgres:15
    container_name: macroferro_postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-password}
      POSTGRES_DB: ${POSTGRES_DB:-macroferro_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init_db_scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-user} -d ${POSTGRES_DB:-macroferro_db}"]
      interval: 10s
      timeout: 5s
      retries: 5

  pgadmin:
    image: dpage/pgadmin4
    container_name: macroferro_pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_EMAIL:-admin@admin.com}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_PASSWORD:-admin}
    ports:
      - "5050:80"
    depends_on:
      - postgres

  redis:
    image: redis:7-alpine
    container_name: macroferro_redis
    restart: unless-stopped
    ports:
      - "6379:6379"

  qdrant:
    image: qdrant/qdrant:latest
    container_name: macroferro_qdrant
    restart: unless-stopped
    ports:
      - "6333:6333" # gRPC
      - "6334:6334" # REST
    volumes:
      - qdrant_storage:/qdrant/storage

  backend:
    build: ./backend
    container_name: macroferro_backend
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app
      - ./scripts:/app/scripts # Montar el directorio de scripts
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started
      qdrant:
        condition: service_started
    env_file:
      - .env
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000", "--reload", "--log-level", "info"]

volumes:
  postgres_data:
  qdrant_storage: